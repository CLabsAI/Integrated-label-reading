import cv2
import tkinter as tk
from tkinter import ttk
import base64
import os
import pickle
from googleapiclient.discovery import build
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request
import matplotlib.pyplot as plt
import numpy as np

# Your Vision API key
vision_api_key = 'YOUR_VISION_API_KEY'

# Google Sheets API
SCOPES = ['https://www.googleapis.com/auth/spreadsheets']
SPREADSHEET_ID = 'YOUR_SPREADSHEET_ID'
RANGE_NAME = 'YOUR_SHEET_NAME'

def capture_image():
    # ... [Same as the modified capture_image function from the first code]

def send_to_vision_and_sheets(image):
    # Convert the OpenCV image to PNG format in memory
    success, encoded_image = cv2.imencode('.png', image)
    if not success:
        print("Error encoding image")
        return

    # Convert the image to base64
    encoded_image_data = base64.b64encode(encoded_image.tobytes()).decode('UTF-8')

    # Build the Vision API client
    vision_service = build('vision', 'v1', developerKey=vision_api_key)

    # Create the request body
    request_body = {
        'requests': [{
            'image': {
                'content': encoded_image_data
            },
            'features': [{
                'type': 'TEXT_DETECTION'
            }]
        }]
    }

    # Call the Vision API
    response = vision_service.images().annotate(body=request_body).execute()

    # Extract the text from the response
    extracted_text = response['responses'][0]['textAnnotations'][0]['description']

    print("Extracted text from the image:")
    print(extracted_text)

    # Load the original image
    image = cv2.imread(image_path)

    # Loop over the text annotations
    for text in response['responses'][0]['textAnnotations'][1:]:
        # Get the vertices of the bounding box
        vertices = [(vertex['x'], vertex['y']) for vertex in text['boundingPoly']['vertices']]
        
        # Draw the bounding box
        cv2.polylines(image, [np.array(vertices)], True, (0, 255, 0), 2)

    # Display the image
    plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
    plt.show()

    # Google Sheets API authentication
    creds = None
    if os.path.exists('token.pickle'):
        with open('token.pickle', 'rb') as token:
            creds = pickle.load(token)
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file(
                'credentials.json', SCOPES)
            creds = flow.run_local_server(port=0)
        with open('token.pickle', 'wb') as token:
            pickle.dump(creds, token)

    sheets_service = build('sheets', 'v4', credentials=creds)

    # Call the Sheets API
    sheet = sheets_service.spreadsheets()
    values = [[extracted_text]]
    body = {'values': values}
    result = sheet.values().append(
        spreadsheetId=SPREADSHEET_ID,
        range=RANGE_NAME,
        valueInputOption='USER_ENTERED',
        body=body).execute()

# Capture the image
captured_frame = capture_image()

# Send the captured image to Vision API and then to Google Sheets
send_to_vision_and_sheets(captured_frame)
